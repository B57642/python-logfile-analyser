
# coding: utf-8

# In[21]:

#importing all the package dependencies required
import pandas as pd
import matplotlib
import matplotlib.pyplot as plt
#Setting the style for all our graphs withtin this script
matplotlib.style.use('ggplot')

#Magical expression to create graphs
get_ipython().magic(u'matplotlib inline')

#Reading in the csv with all our details
iplist = pd.read_csv("iplocation.csv")
#Inputting the csv into a data frame
df = pd.DataFrame(iplist)
#naming the columns within the data frame
df.columns = ['time_stamp', 'ip', 'country', 'city']


# In[22]:

#Print the first 5 rows from the data frame
df.head()


# In[23]:

#Print the last 5 rows from the data frame
df.tail()


# In[24]:

#Filter out all rows where the country column has the value = Ireland
df_filtered = df[df['country'] !='Ireland']
df_filtered


# In[25]:

#Depending on the values (e.g. object, string or int) it will display some basic statistics
#Since this is an object value it will display; count, unique, most common, and frequency of the most common
df_filtered['ip'].describe()


# In[26]:

df_filtered['time_stamp'].describe()


# In[27]:

df_filtered['country'].describe()


# In[28]:

df_filtered['city'].describe()


# In[29]:

#List the data types in each column
df_filtered.dtypes


# In[30]:

#Create a new data frame where it's grouped by the country and has the total amount of hits generated by the count of all 
#the countries in our previous data frame df_filtered
total_visitors = pd.DataFrame(df_filtered.country.value_counts())
total_visitors.columns = ['hits']
total_visitors


# In[31]:

#Display graph from the total_visitors data frame
total_visitors.plot(kind='barh', figsize=(10,10))
plt.title('Number of appearances in dataset')
plt.xlabel('Frequency')
plt.ylabel('Country')
#Save the graph to .png image
plt.savefig('total_visitors.png',bbox_inches='tight')


# In[32]:

#Filter the original data frame to have only the top three countries
top_three_filtered = df[(df['country'] == 'Vietnam') | 
                       (df['country'] == 'United States') | 
                       (df['country'] == 'Greece')]
#Based on the countries filtered, count all the ctities associated with each country and goup them
top_three_city = pd.DataFrame(top_three_filtered.city.value_counts())
top_three_city.columns = ['hits']
top_three_city


# In[33]:

#Display graph from the top_three_city data frame
top_three_city.plot(kind='barh', figsize=(10,10))
plt.title('Number of appearances in dataset')
plt.xlabel('Frequency')
plt.ylabel('City')
#Save the graph to .png image
plt.savefig('top_three_city.png',bbox_inches='tight')


# In[34]:

#Create a new data frame and filter it by the country Vietnam 
top_country_one = df[(df['country'] == 'Vietnam')]
#Group all the citites in Vietnam and count the value that appears
top_country_city_one = pd.DataFrame(top_country_one.city.value_counts())
top_country_city_one.columns = ['hits']
top_country_city_one


# In[35]:

#Display graph from the top_country_city_one data frame
top_country_city_one.plot.pie(figsize=(10,10), subplots='True', autopct='%.2f', fontsize=13)
plt.title('Number of appearances in dataset')
plt.xlabel('Frequency')
plt.ylabel('City')
#Save the graph to .png image
plt.savefig('top_country_city_one.png',bbox_inches='tight')


# In[36]:

#Create a new data frame and filter it by the country United States
top_country_two = df[(df['country'] == 'United States')]
#Group all the citites in Vietnam and count the value that appears
top_country_city_two = pd.DataFrame(top_country_two.city.value_counts())
#Name the column
top_country_city_two.columns = ['hits']
#Filter out the data again with any 'hits' value below 10
top_country_city_two_filtered = top_country_city_two[(top_country_city_two > 10).all(axis=1)]
#Display data frame
top_country_city_two_filtered


# In[37]:

#Display graph from the top_country_city_two data frame
top_country_city_two_filtered.plot.pie(figsize=(10,10), subplots='True', autopct='%.2f', fontsize=20)
plt.title('Number of appearances in dataset')
plt.xlabel('Frequency')
plt.ylabel('City')
#Save the graph to .png image
plt.savefig('top_country_city_two_filtered.png',bbox_inches='tight')


# In[38]:

#Create a new data frame and filter it by the country United Kingdom
top_country_three = df[(df['country'] == 'United Kingdom')]
#Group all the citites in United Kingdom and count the value that appears
top_country_city_three = pd.DataFrame(top_country_three.city.value_counts())
#Name the column 
top_country_city_three.columns = ['hits']
#Filter out the data again with any 'hits' value below 4
top_country_city_three_filtered = top_country_city_three[(top_country_city_three > 4).all(axis=1)]
#Display the data frame 
top_country_city_three_filtered


# In[39]:

#Graph the data frame top_country_city_three_filtered
popular_cities_uk = top_country_city_three_filtered.plot.pie(figsize=(10,10), subplots='True', autopct='%.2f', fontsize=20)
plt.title('Number of appearances in dataset')
plt.xlabel('Frequency')
plt.ylabel('City')
#Save the graph to .png image
plt.savefig('top_country_city_three_filtered.png',bbox_inches='tight')

